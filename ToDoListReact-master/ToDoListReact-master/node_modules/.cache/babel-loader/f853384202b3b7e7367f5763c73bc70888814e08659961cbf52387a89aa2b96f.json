{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = process.env.REACT_APP_API_URL;\nexport default {\n  // getTasks: async () => {\n  //       const response = await axios.get(`${apiUrl}/items`);\n  //       return response.data; \n  // }\n  // ,\n\n  addTask: async name => {\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name: name,\n        isComplete: false\n      });\n      console.log('Task added successfully', result.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  },\n  deleteTask: async id => {\n    try {\n      await axios.delete(`${apiUrl}/items/${id}`);\n      return id; // מחזיר את ה-ID למחיקה בצד הלקוח\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  },\n  updateTask: async (id, name, isComplete) => {\n    try {\n      const updatedTask = {\n        Name: name,\n        IsComplete: isComplete\n      };\n\n      // שולח את הנתונים לשרת\n      const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n        headers: {\n          'Content-Type': 'application/json' // חשוב שה-Content-Type יהיה json\n        }\n      });\n      console.log('Task updated successfully:', result.data);\n      return result.data;\n    } catch (error) {\n      // טיפול בשגיאות כולל הצגת פרטי השגיאה\n      console.error('Error updating task:', error);\n      if (error.response) {\n        // אם יש תשובת שגיאה מהשרת (למשל 500)\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        // אם לא התקבלה תשובה מהשרת\n        console.error('No response received:', error.request);\n      } else {\n        // אם הייתה בעיה כלשהי בהגדרת הבקשה\n        console.error('Error message:', error.message);\n      }\n      throw error;\n    }\n  },\n  setCompleted: async (id, name, isComplete) => {\n    try {\n      // שולח רק את השדה 'isComplete' ב-JSON\n      const result = await axios.put(`${apiUrl}/items/${id}`, {\n        name: name,\n        isComplete: isComplete\n      }, {\n        headers: {\n          'Content-Type': 'application/json' // חשוב שה-Content-Type יהיה json\n        }\n      });\n      console.log('Task updated successfully:', result.data);\n    } catch (error) {\n      console.error('Error updating task:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        console.error('No response received:', error.request);\n      } else {\n        console.error('Error message:', error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","process","env","REACT_APP_API_URL","addTask","name","result","post","isComplete","console","log","data","error","deleteTask","id","delete","updateTask","updatedTask","Name","IsComplete","put","headers","response","status","request","message","setCompleted"],"sources":["C:/Users/This User/Desktop/הנדסאים/שנה ב/פרקטיקוד/פרויקט 3/TodoApi/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = process.env.REACT_APP_API_URL; \n\nexport default {\n\n// getTasks: async () => {\n//       const response = await axios.get(`${apiUrl}/items`);\n//       return response.data; \n// }\n// ,\n\n\n\n\n\naddTask: async (name) => {\n    \n  try {\n      const result = await axios.post(`${apiUrl}/items`, {\n          name: name,\n          isComplete: false  \n      });\n      console.log('Task added successfully', result.data);\n  } catch (error) {\n      console.error('Error adding task:', error);\n  }\n},\ndeleteTask: async (id) => {\n  try {\n    await axios.delete(`${apiUrl}/items/${id}`);\n    return id; // מחזיר את ה-ID למחיקה בצד הלקוח\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n  }\n}\n,\n\n\nupdateTask: async (id, name, isComplete) => {\n  try {\n    const updatedTask = {\n      Name: name,  \n      IsComplete: isComplete \n    };\n\n    // שולח את הנתונים לשרת\n    const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n      headers: {\n        'Content-Type': 'application/json'  // חשוב שה-Content-Type יהיה json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n    return result.data;\n  } catch (error) {\n    // טיפול בשגיאות כולל הצגת פרטי השגיאה\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      // אם יש תשובת שגיאה מהשרת (למשל 500)\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      // אם לא התקבלה תשובה מהשרת\n      console.error('No response received:', error.request);\n    } else {\n      // אם הייתה בעיה כלשהי בהגדרת הבקשה\n      console.error('Error message:', error.message);\n    }\n\n    throw error; \n  }\n}\n,\nsetCompleted: async (id,name, isComplete) => {\n  try {\n    // שולח רק את השדה 'isComplete' ב-JSON\n    const result = await axios.put(`${apiUrl}/items/${id}`, {\n      name: name,  \n  isComplete: isComplete \n    }, {\n      headers: {\n        'Content-Type': 'application/json'  // חשוב שה-Content-Type יהיה json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n  } catch (error) {\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error message:', error.message);\n    }\n  }\n}\n\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}