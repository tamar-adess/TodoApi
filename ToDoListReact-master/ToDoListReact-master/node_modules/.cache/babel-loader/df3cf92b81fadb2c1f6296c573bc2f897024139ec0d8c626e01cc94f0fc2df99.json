{"ast":null,"code":"import axios from'axios';const apiUrl=\"http://localhost:5224\";// אם אתה לא רוצה להשתמש ב-HTTPS\nexport default{getTasks:async()=>{const result=await axios.get(`${apiUrl}/items`);return result.data;},addTask:async name=>{try{const result=await axios.post(`${apiUrl}/items`,{name:name,isComplete:false// הוספת מצב ברירת מחדל (לא הושלם)\n});console.log('Task added successfully',result.data);}catch(error){console.error('Error adding task:',error);}},deleteTask:async id=>{try{await axios.delete(`${apiUrl}/items/${id}`);return id;// מחזיר את ה-ID למחיקה בצד הלקוח\n}catch(error){console.error(\"Error deleting task:\",error);}},updateTask:async(id,name,isComplete)=>{try{const updatedTask={Name:name,IsComplete:isComplete};// שולח את הנתונים לשרת\nconst result=await axios.put(`${apiUrl}/items/${id}`,updatedTask,{headers:{'Content-Type':'application/json'// חשוב שה-Content-Type יהיה json\n}});console.log('Task updated successfully:',result.data);return result.data;}catch(error){// טיפול בשגיאות כולל הצגת פרטי השגיאה\nconsole.error('Error updating task:',error);if(error.response){// אם יש תשובת שגיאה מהשרת (למשל 500)\nconsole.error('Error response:',error.response.data);console.error('Error status:',error.response.status);}else if(error.request){// אם לא התקבלה תשובה מהשרת\nconsole.error('No response received:',error.request);}else{// אם הייתה בעיה כלשהי בהגדרת הבקשה\nconsole.error('Error message:',error.message);}// זורק את השגיאה כדי שניתן יהיה לתפוס אותה בצד הלקוח\nthrow error;}},setCompleted:async(id,name,isComplete)=>{try{// שולח רק את השדה 'isComplete' ב-JSON\nconst result=await axios.put(`${apiUrl}/items/${id}`,{Name:name,// אם לא מעדכנים את ה-Name, שלח ערך ריק\nIsComplete:isComplete// עדכון של השדה IsComplete בלבד\n},{headers:{'Content-Type':'application/json'// חשוב שה-Content-Type יהיה json\n}});console.log('Task updated successfully:',result.data);}catch(error){console.error('Error updating task:',error);if(error.response){console.error('Error response:',error.response.data);console.error('Error status:',error.response.status);}else if(error.request){console.error('No response received:',error.request);}else{console.error('Error message:',error.message);}}}};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","post","isComplete","console","log","error","deleteTask","id","delete","updateTask","updatedTask","Name","IsComplete","put","headers","response","status","request","message","setCompleted"],"sources":["C:/Users/This User/Desktop/הנדסאים/שנה ב/פרקטיקוד/פרויקט 3/TodoApi/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n const apiUrl = \"http://localhost:5224\";  // אם אתה לא רוצה להשתמש ב-HTTPS\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  addTask: async (name) => {\n    \n    try {\n        const result = await axios.post(`${apiUrl}/items`, {\n            name: name,\n            isComplete: false  // הוספת מצב ברירת מחדל (לא הושלם)\n        });\n        console.log('Task added successfully', result.data);\n    } catch (error) {\n        console.error('Error adding task:', error);\n    }\n},\n\n    \ndeleteTask: async (id) => {\n  try {\n    await axios.delete(`${apiUrl}/items/${id}`);\n    return id; // מחזיר את ה-ID למחיקה בצד הלקוח\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n  }\n}\n,\n\n\nupdateTask: async (id, name, isComplete) => {\n  try {\n    const updatedTask = {\n      Name: name,  \n      IsComplete: isComplete \n    };\n\n    // שולח את הנתונים לשרת\n    const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n      headers: {\n        'Content-Type': 'application/json'  // חשוב שה-Content-Type יהיה json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n    return result.data;\n  } catch (error) {\n    // טיפול בשגיאות כולל הצגת פרטי השגיאה\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      // אם יש תשובת שגיאה מהשרת (למשל 500)\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      // אם לא התקבלה תשובה מהשרת\n      console.error('No response received:', error.request);\n    } else {\n      // אם הייתה בעיה כלשהי בהגדרת הבקשה\n      console.error('Error message:', error.message);\n    }\n\n    // זורק את השגיאה כדי שניתן יהיה לתפוס אותה בצד הלקוח\n    throw error; \n  }\n}\n,\nsetCompleted: async (id,name, isComplete) => {\n  try {\n    // שולח רק את השדה 'isComplete' ב-JSON\n    const result = await axios.put(`${apiUrl}/items/${id}`, {\n      Name: name,  // אם לא מעדכנים את ה-Name, שלח ערך ריק\n      IsComplete: isComplete  // עדכון של השדה IsComplete בלבד\n    }, {\n      headers: {\n        'Content-Type': 'application/json'  // חשוב שה-Content-Type יהיה json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n  } catch (error) {\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error message:', error.message);\n    }\n  }\n}\n\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}