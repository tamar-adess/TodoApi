{"ast":null,"code":"import axios from 'axios';\n\n//  const apiUrl = \"http://localhost:5224\";  // אם אתה לא רוצה להשתמש ב-HTTPS\nconst apiUrl = process.env.REACT_APP_API_URL; // אם אתה לא רוצה להשתמש ב-HTTPS\n\nexport default {\n  //   getTasks: async () => {\n  //     const result = await axios.get(`${apiUrl}/items`)    \n  //     return result.data;\n  //   },\n\n  //   addTask: async (name) => {\n\n  //     try {\n  //         const result = await axios.post(`${apiUrl}/items`, {\n  //             name: name,\n  //             isComplete: false  // הוספת מצב ברירת מחדל (לא הושלם)\n  //         });\n  //         console.log('Task added successfully', result.data);\n  //     } catch (error) {\n  //         console.error('Error adding task:', error);\n  //     }\n  // },\n\n  deleteTask: async id => {\n    try {\n      await axios.delete(`${apiUrl}/items/${id}`);\n      return id; // מחזיר את ה-ID למחיקה בצד הלקוח\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  },\n  updateTask: async (id, name, isComplete) => {\n    try {\n      const updatedTask = {\n        Name: name,\n        IsComplete: isComplete\n      };\n\n      // שולח את הנתונים לשרת\n      const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n        headers: {\n          'Content-Type': 'application/json' // חשוב שה-Content-Type יהיה json\n        }\n      });\n      console.log('Task updated successfully:', result.data);\n      return result.data;\n    } catch (error) {\n      // טיפול בשגיאות כולל הצגת פרטי השגיאה\n      console.error('Error updating task:', error);\n      if (error.response) {\n        // אם יש תשובת שגיאה מהשרת (למשל 500)\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        // אם לא התקבלה תשובה מהשרת\n        console.error('No response received:', error.request);\n      } else {\n        // אם הייתה בעיה כלשהי בהגדרת הבקשה\n        console.error('Error message:', error.message);\n      }\n\n      // זורק את השגיאה כדי שניתן יהיה לתפוס אותה בצד הלקוח\n      throw error;\n    }\n  },\n  setCompleted: async (id, name, isComplete) => {\n    try {\n      // שולח רק את השדה 'isComplete' ב-JSON\n      const result = await axios.put(`${apiUrl}/items/${id}`, {\n        name: name,\n        isComplete: isComplete\n      }, {\n        headers: {\n          'Content-Type': 'application/json' // חשוב שה-Content-Type יהיה json\n        }\n      });\n      console.log('Task updated successfully:', result.data);\n    } catch (error) {\n      console.error('Error updating task:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        console.error('No response received:', error.request);\n      } else {\n        console.error('Error message:', error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","process","env","REACT_APP_API_URL","deleteTask","id","delete","error","console","updateTask","name","isComplete","updatedTask","Name","IsComplete","result","put","headers","log","data","response","status","request","message","setCompleted"],"sources":["C:/Users/This User/Desktop/הנדסאים/שנה ב/פרקטיקוד/פרויקט 3/TodoApi/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n//  const apiUrl = \"http://localhost:5224\";  // אם אתה לא רוצה להשתמש ב-HTTPS\nconst apiUrl = process.env.REACT_APP_API_URL; // אם אתה לא רוצה להשתמש ב-HTTPS\n\nexport default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async (name) => {\n    \n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, {\n//             name: name,\n//             isComplete: false  // הוספת מצב ברירת מחדל (לא הושלם)\n//         });\n//         console.log('Task added successfully', result.data);\n//     } catch (error) {\n//         console.error('Error adding task:', error);\n//     }\n// },\n\n    \ndeleteTask: async (id) => {\n  try {\n    await axios.delete(`${apiUrl}/items/${id}`);\n    return id; // מחזיר את ה-ID למחיקה בצד הלקוח\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n  }\n}\n,\n\n\nupdateTask: async (id, name, isComplete) => {\n  try {\n    const updatedTask = {\n      Name: name,  \n      IsComplete: isComplete \n    };\n\n    // שולח את הנתונים לשרת\n    const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n      headers: {\n        'Content-Type': 'application/json'  // חשוב שה-Content-Type יהיה json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n    return result.data;\n  } catch (error) {\n    // טיפול בשגיאות כולל הצגת פרטי השגיאה\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      // אם יש תשובת שגיאה מהשרת (למשל 500)\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      // אם לא התקבלה תשובה מהשרת\n      console.error('No response received:', error.request);\n    } else {\n      // אם הייתה בעיה כלשהי בהגדרת הבקשה\n      console.error('Error message:', error.message);\n    }\n\n    // זורק את השגיאה כדי שניתן יהיה לתפוס אותה בצד הלקוח\n    throw error; \n  }\n}\n,\nsetCompleted: async (id,name, isComplete) => {\n  try {\n    // שולח רק את השדה 'isComplete' ב-JSON\n    const result = await axios.put(`${apiUrl}/items/${id}`, {\n      name: name,  \n  isComplete: isComplete \n    }, {\n      headers: {\n        'Content-Type': 'application/json'  // חשוב שה-Content-Type יהיה json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n  } catch (error) {\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error message:', error.message);\n    }\n  }\n}\n\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}