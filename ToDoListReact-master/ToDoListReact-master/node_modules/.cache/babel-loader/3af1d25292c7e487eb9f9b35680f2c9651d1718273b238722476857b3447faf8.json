{"ast":null,"code":"// // import axios from 'axios';\n\n// // const apiUrl = \"https://localhost:5224\";\n// // export default {\n// //   getTasks: async () => {\n// //     const result = await axios.get(`${apiUrl}/items`)    \n// //     return result.data;\n// //   },\n\n// //   addTask: async(name)=>{\n// //     console.log('addTask', name)\n// //     //TODO\n// //     return {};\n// //   },\n\n// //   setCompleted: async(id, isComplete)=>{\n// //     console.log('setCompleted', {id, isComplete})\n// //     //TODO\n// //     return {};\n// //   },\n\n// //   deleteTask:async()=>{\n// //     console.log('deleteTask')\n// //   }\n// // };\n// // import axios from 'axios';\n\n// // // הגדרת כתובת ה-API כ-default לכל קריאות ה-axios\n// // const apiUrl = \"http://localhost:5224\";  // שינוי מ-https ל-httpשים לב לשינוי ל-HTTP ולא HTTPS\n\n// // // הגדרת axios עם config default\n// // axios.defaults.baseURL = apiUrl;\n// // axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// // // הוספת interceptor לתפיסת שגיאות ב-response\n// // axios.interceptors.response.use(\n// //   response => response,  // במקרה של הצלחה, נחזיר את התשובה\n// //   error => {\n// //     // במקרה של שגיאה, נרשום את השגיאה ללוג\n// //     console.error('API Error:', error.response ? error.response.data : error.message);\n// //     return Promise.reject(error);  // נחזיר את השגיאה כך שנוכל לטפל בה במקומות אחרים\n// //   }\n// // );\n\n// // export default {\n// //   // 1. שליפת כל המשימות\n// //   getTasks: async () => {\n// //     try {\n// //       const result = await axios.get('/items');\n// //       return result.data;\n// //     } catch (error) {\n// //       console.error(\"Error fetching tasks:\", error);\n// //       throw error;\n// //     }\n// //   },\n\n// //   // 2. הוספת משימה חדשה\n// //   addTask: async (name) => {\n// //     try {\n// //       const result = await axios.post('/items', { name, isComplete: false });\n// //       console.log(\"Task added:\", result.data);\n// //       return result.data;\n// //     } catch (error) {\n// //       console.error(\"Error adding task:\", error);\n// //       throw error;\n// //     }\n// //   },\n\n// //   // 3. עדכון סטטוס משימה (השלמה/לא הושלמה)\n// //   setCompleted: async (id, isComplete) => {\n// //     try {\n// //       const result = await axios.put(`/items/${id}`, { isComplete });\n// //       console.log(\"Task updated:\", result.data);\n// //       return result.data;\n// //     } catch (error) {\n// //       console.error(\"Error updating task:\", error);\n// //       throw error;\n// //     }\n// //   },\n\n// //   // 4. מחיקת משימה\n// //   deleteTask: async (id) => {\n// //     try {\n// //       await axios.delete(`/items/${id}`);\n// //       console.log(\"Task deleted:\", id);\n// //       return id;\n// //     } catch (error) {\n// //       console.error(\"Error deleting task:\", error);\n// //       throw error;\n// //     }\n// //   }\n// // };\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default לכל קריאות ה-axios\n// const apiUrl = \"http://localhost:5224\";  // שינוי מ-https ל-http\n\n// // הגדרת axios עם config default\n// axios.defaults.baseURL = apiUrl;\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// // הוספת interceptor לתפיסת שגיאות ב-response\n// axios.interceptors.response.use(\n//   response => response,  // במקרה של הצלחה, נחזיר את התשובה\n//   error => {\n//     // במקרה של שגיאה, נרשום את השגיאה ללוג\n//     console.error('API Error:', error.response ? error.response.data : error.message);\n//     return Promise.reject(error);  // נחזיר את השגיאה כך שנוכל לטפל בה במקומות אחרים\n//   }\n// );\n\n// export default {\n//   // 1. שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//         const result = await axios.get('/items');\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error fetching tasks:\", error.response ? error.response.data : error.message);\n//         throw error;  // זרוק את השגיאה כך שנוכל לטפל בה במקומות אחרים\n//     }\n// }\n// ,\n//   // 2. הוספת משימה חדשה\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/items', { name, isComplete: false });\n//       console.log(\"Task added:\", result.data);\n//       return result.data;\n//     } catch (error) {\n//       console.error(\"Error adding task:\", error);\n//       throw error;\n//     }\n//   },\n\n//   // 3. עדכון סטטוס משימה (השלמה/לא הושלמה)\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/items/${id}`, { isComplete });\n//       console.log(\"Task updated:\", result.data);\n//       return result.data;\n//     } catch (error) {\n//       console.error(\"Error updating task:\", error);\n//       throw error;\n//     }\n//   },\n\n//   // 4. מחיקת משימה\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/items/${id}`);\n//       console.log(\"Task deleted:\", id);\n//       return id;\n//     } catch (error) {\n//       console.error(\"Error deleting task:\", error);\n//       throw error;\n//     }\n//   }\n// };\n\nimport axios from 'axios';\n\n// const apiUrl = \"https://localhost:5224\"\nconst apiUrl = \"http://localhost:5224\"; // אם אתה לא רוצה להשתמש ב-HTTPS\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    //TODO\n    return {};\n  },\n  // setCompleted: async(id, isComplete)=>{\n  //   console.log('setCompleted', {id, isComplete})\n  //   //TODO\n  //   return {};\n  // },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      await axios.put(`${apiUrl}/items/${id}`, {\n        isComplete\n      });\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n    return {};\n  },\n  deleteTask: async () => {\n    console.log('deleteTask');\n  }\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","console","log","setCompleted","id","isComplete","put","error","deleteTask"],"sources":["C:/Users/This User/Downloads/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// // import axios from 'axios';\n\n\n// // const apiUrl = \"https://localhost:5224\";\n// // export default {\n// //   getTasks: async () => {\n// //     const result = await axios.get(`${apiUrl}/items`)    \n// //     return result.data;\n// //   },\n\n// //   addTask: async(name)=>{\n// //     console.log('addTask', name)\n// //     //TODO\n// //     return {};\n// //   },\n\n// //   setCompleted: async(id, isComplete)=>{\n// //     console.log('setCompleted', {id, isComplete})\n// //     //TODO\n// //     return {};\n// //   },\n\n// //   deleteTask:async()=>{\n// //     console.log('deleteTask')\n// //   }\n// // };\n// // import axios from 'axios';\n\n// // // הגדרת כתובת ה-API כ-default לכל קריאות ה-axios\n// // const apiUrl = \"http://localhost:5224\";  // שינוי מ-https ל-httpשים לב לשינוי ל-HTTP ולא HTTPS\n\n// // // הגדרת axios עם config default\n// // axios.defaults.baseURL = apiUrl;\n// // axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// // // הוספת interceptor לתפיסת שגיאות ב-response\n// // axios.interceptors.response.use(\n// //   response => response,  // במקרה של הצלחה, נחזיר את התשובה\n// //   error => {\n// //     // במקרה של שגיאה, נרשום את השגיאה ללוג\n// //     console.error('API Error:', error.response ? error.response.data : error.message);\n// //     return Promise.reject(error);  // נחזיר את השגיאה כך שנוכל לטפל בה במקומות אחרים\n// //   }\n// // );\n\n// // export default {\n// //   // 1. שליפת כל המשימות\n// //   getTasks: async () => {\n// //     try {\n// //       const result = await axios.get('/items');\n// //       return result.data;\n// //     } catch (error) {\n// //       console.error(\"Error fetching tasks:\", error);\n// //       throw error;\n// //     }\n// //   },\n\n// //   // 2. הוספת משימה חדשה\n// //   addTask: async (name) => {\n// //     try {\n// //       const result = await axios.post('/items', { name, isComplete: false });\n// //       console.log(\"Task added:\", result.data);\n// //       return result.data;\n// //     } catch (error) {\n// //       console.error(\"Error adding task:\", error);\n// //       throw error;\n// //     }\n// //   },\n\n// //   // 3. עדכון סטטוס משימה (השלמה/לא הושלמה)\n// //   setCompleted: async (id, isComplete) => {\n// //     try {\n// //       const result = await axios.put(`/items/${id}`, { isComplete });\n// //       console.log(\"Task updated:\", result.data);\n// //       return result.data;\n// //     } catch (error) {\n// //       console.error(\"Error updating task:\", error);\n// //       throw error;\n// //     }\n// //   },\n\n// //   // 4. מחיקת משימה\n// //   deleteTask: async (id) => {\n// //     try {\n// //       await axios.delete(`/items/${id}`);\n// //       console.log(\"Task deleted:\", id);\n// //       return id;\n// //     } catch (error) {\n// //       console.error(\"Error deleting task:\", error);\n// //       throw error;\n// //     }\n// //   }\n// // };\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default לכל קריאות ה-axios\n// const apiUrl = \"http://localhost:5224\";  // שינוי מ-https ל-http\n\n// // הגדרת axios עם config default\n// axios.defaults.baseURL = apiUrl;\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// // הוספת interceptor לתפיסת שגיאות ב-response\n// axios.interceptors.response.use(\n//   response => response,  // במקרה של הצלחה, נחזיר את התשובה\n//   error => {\n//     // במקרה של שגיאה, נרשום את השגיאה ללוג\n//     console.error('API Error:', error.response ? error.response.data : error.message);\n//     return Promise.reject(error);  // נחזיר את השגיאה כך שנוכל לטפל בה במקומות אחרים\n//   }\n// );\n\n// export default {\n//   // 1. שליפת כל המשימות\n//   getTasks: async () => {\n//     try {\n//         const result = await axios.get('/items');\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error fetching tasks:\", error.response ? error.response.data : error.message);\n//         throw error;  // זרוק את השגיאה כך שנוכל לטפל בה במקומות אחרים\n//     }\n// }\n// ,\n//   // 2. הוספת משימה חדשה\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/items', { name, isComplete: false });\n//       console.log(\"Task added:\", result.data);\n//       return result.data;\n//     } catch (error) {\n//       console.error(\"Error adding task:\", error);\n//       throw error;\n//     }\n//   },\n\n//   // 3. עדכון סטטוס משימה (השלמה/לא הושלמה)\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/items/${id}`, { isComplete });\n//       console.log(\"Task updated:\", result.data);\n//       return result.data;\n//     } catch (error) {\n//       console.error(\"Error updating task:\", error);\n//       throw error;\n//     }\n//   },\n\n//   // 4. מחיקת משימה\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/items/${id}`);\n//       console.log(\"Task deleted:\", id);\n//       return id;\n//     } catch (error) {\n//       console.error(\"Error deleting task:\", error);\n//       throw error;\n//     }\n//   }\n// };\n\n\nimport axios from 'axios';\n\n// const apiUrl = \"https://localhost:5224\"\nconst apiUrl = \"http://localhost:5224\";  // אם אתה לא רוצה להשתמש ב-HTTPS\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    //TODO\n    return {};\n  },\n\n  // setCompleted: async(id, isComplete)=>{\n  //   console.log('setCompleted', {id, isComplete})\n  //   //TODO\n  //   return {};\n  // },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      await axios.put(`${apiUrl}/items/${id}`, { isComplete });\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n    return {};\n  }\n,  \n\n  deleteTask:async()=>{\n    console.log('deleteTask')\n  }\n};"],"mappings":"AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,MAAM,GAAG,uBAAuB,CAAC,CAAE;;AAEzC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,MAAM,QAAQ,CAAC;IACjD,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC5B;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAED;EACA;EACA;EACA;EACA;EACAG,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEE,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,IAAI;MACF,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,MAAM,UAAUU,EAAE,EAAE,EAAE;QAAEC;MAAW,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAGDC,UAAU,EAAC,MAAAA,CAAA,KAAS;IAClBP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}