{"ast":null,"code":"import axios from 'axios';\n\n// const apiUrl = process.env.REACT_APP_API_URL; \nconst apiUrl = \"\"; // ◊î◊í◊ì◊®◊™ ◊î-API ◊ô◊ì◊†◊ô◊™\n\nexport default {\n  // getTasks: async () => {\n  //       const response = await axios.get(`${apiUrl}/items`);\n  //       return response.data; \n  // }\n  // ,\n  getTasks: async () => {\n    try {\n      console.log(\"üì° Fetching from API:\", `${apiUrl}/items`);\n      const response = await axios.get(`${apiUrl}/items`);\n      console.log(\"‚úÖ API Response:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"‚ùå API Fetch Error:\", error);\n    }\n  },\n  addTask: async name => {\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name: name,\n        isComplete: false\n      });\n      console.log('Task added successfully', result.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  },\n  deleteTask: async id => {\n    try {\n      await axios.delete(`${apiUrl}/items/${id}`);\n      return id; // ◊û◊ó◊ñ◊ô◊® ◊ê◊™ ◊î-ID ◊ú◊û◊ó◊ô◊ß◊î ◊ë◊¶◊ì ◊î◊ú◊ß◊ï◊ó\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  },\n  updateTask: async (id, name, isComplete) => {\n    try {\n      const updatedTask = {\n        Name: name,\n        IsComplete: isComplete\n      };\n\n      // ◊©◊ï◊ú◊ó ◊ê◊™ ◊î◊†◊™◊ï◊†◊ô◊ù ◊ú◊©◊®◊™\n      const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n        headers: {\n          'Content-Type': 'application/json' // ◊ó◊©◊ï◊ë ◊©◊î-Content-Type ◊ô◊î◊ô◊î json\n        }\n      });\n      console.log('Task updated successfully:', result.data);\n      return result.data;\n    } catch (error) {\n      // ◊ò◊ô◊§◊ï◊ú ◊ë◊©◊í◊ô◊ê◊ï◊™ ◊õ◊ï◊ú◊ú ◊î◊¶◊í◊™ ◊§◊®◊ò◊ô ◊î◊©◊í◊ô◊ê◊î\n      console.error('Error updating task:', error);\n      if (error.response) {\n        // ◊ê◊ù ◊ô◊© ◊™◊©◊ï◊ë◊™ ◊©◊í◊ô◊ê◊î ◊û◊î◊©◊®◊™ (◊ú◊û◊©◊ú 500)\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        // ◊ê◊ù ◊ú◊ê ◊î◊™◊ß◊ë◊ú◊î ◊™◊©◊ï◊ë◊î ◊û◊î◊©◊®◊™\n        console.error('No response received:', error.request);\n      } else {\n        // ◊ê◊ù ◊î◊ô◊ô◊™◊î ◊ë◊¢◊ô◊î ◊õ◊ú◊©◊î◊ô ◊ë◊î◊í◊ì◊®◊™ ◊î◊ë◊ß◊©◊î\n        console.error('Error message:', error.message);\n      }\n      throw error;\n    }\n  },\n  setCompleted: async (id, name, isComplete) => {\n    try {\n      // ◊©◊ï◊ú◊ó ◊®◊ß ◊ê◊™ ◊î◊©◊ì◊î 'isComplete' ◊ë-JSON\n      const result = await axios.put(`${apiUrl}/items/${id}`, {\n        name: name,\n        isComplete: isComplete\n      }, {\n        headers: {\n          'Content-Type': 'application/json' // ◊ó◊©◊ï◊ë ◊©◊î-Content-Type ◊ô◊î◊ô◊î json\n        }\n      });\n      console.log('Task updated successfully:', result.data);\n    } catch (error) {\n      console.error('Error updating task:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        console.error('No response received:', error.request);\n      } else {\n        console.error('Error message:', error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","console","log","response","get","data","error","addTask","name","result","post","isComplete","deleteTask","id","delete","updateTask","updatedTask","Name","IsComplete","put","headers","status","request","message","setCompleted"],"sources":["C:/Users/This User/Desktop/◊î◊†◊ì◊°◊ê◊ô◊ù/◊©◊†◊î ◊ë/◊§◊®◊ß◊ò◊ô◊ß◊ï◊ì/◊§◊®◊ï◊ô◊ß◊ò 3/TodoApi/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// const apiUrl = process.env.REACT_APP_API_URL; \nconst apiUrl = \"\" // ◊î◊í◊ì◊®◊™ ◊î-API ◊ô◊ì◊†◊ô◊™\n\nexport default {\n\n// getTasks: async () => {\n//       const response = await axios.get(`${apiUrl}/items`);\n//       return response.data; \n// }\n// ,\ngetTasks: async () => {\n  try {\n      console.log(\"üì° Fetching from API:\", `${apiUrl}/items`); \n      const response = await axios.get(`${apiUrl}/items`);\n      console.log(\"‚úÖ API Response:\", response.data);\n      return response.data;\n  } catch (error) {\n      console.error(\"‚ùå API Fetch Error:\", error);\n  }\n},\n\n\n\n\n\naddTask: async (name) => {\n    \n  try {\n      const result = await axios.post(`${apiUrl}/items`, {\n          name: name,\n          isComplete: false  \n      });\n      console.log('Task added successfully', result.data);\n  } catch (error) {\n      console.error('Error adding task:', error);\n  }\n},\ndeleteTask: async (id) => {\n  try {\n    await axios.delete(`${apiUrl}/items/${id}`);\n    return id; // ◊û◊ó◊ñ◊ô◊® ◊ê◊™ ◊î-ID ◊ú◊û◊ó◊ô◊ß◊î ◊ë◊¶◊ì ◊î◊ú◊ß◊ï◊ó\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n  }\n}\n,\n\n\nupdateTask: async (id, name, isComplete) => {\n  try {\n    const updatedTask = {\n      Name: name,  \n      IsComplete: isComplete \n    };\n\n    // ◊©◊ï◊ú◊ó ◊ê◊™ ◊î◊†◊™◊ï◊†◊ô◊ù ◊ú◊©◊®◊™\n    const result = await axios.put(`${apiUrl}/items/${id}`, updatedTask, {\n      headers: {\n        'Content-Type': 'application/json'  // ◊ó◊©◊ï◊ë ◊©◊î-Content-Type ◊ô◊î◊ô◊î json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n    return result.data;\n  } catch (error) {\n    // ◊ò◊ô◊§◊ï◊ú ◊ë◊©◊í◊ô◊ê◊ï◊™ ◊õ◊ï◊ú◊ú ◊î◊¶◊í◊™ ◊§◊®◊ò◊ô ◊î◊©◊í◊ô◊ê◊î\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      // ◊ê◊ù ◊ô◊© ◊™◊©◊ï◊ë◊™ ◊©◊í◊ô◊ê◊î ◊û◊î◊©◊®◊™ (◊ú◊û◊©◊ú 500)\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      // ◊ê◊ù ◊ú◊ê ◊î◊™◊ß◊ë◊ú◊î ◊™◊©◊ï◊ë◊î ◊û◊î◊©◊®◊™\n      console.error('No response received:', error.request);\n    } else {\n      // ◊ê◊ù ◊î◊ô◊ô◊™◊î ◊ë◊¢◊ô◊î ◊õ◊ú◊©◊î◊ô ◊ë◊î◊í◊ì◊®◊™ ◊î◊ë◊ß◊©◊î\n      console.error('Error message:', error.message);\n    }\n\n    throw error; \n  }\n}\n,\nsetCompleted: async (id,name, isComplete) => {\n  try {\n    // ◊©◊ï◊ú◊ó ◊®◊ß ◊ê◊™ ◊î◊©◊ì◊î 'isComplete' ◊ë-JSON\n    const result = await axios.put(`${apiUrl}/items/${id}`, {\n      name: name,  \n  isComplete: isComplete \n    }, {\n      headers: {\n        'Content-Type': 'application/json'  // ◊ó◊©◊ï◊ë ◊©◊î-Content-Type ◊ô◊î◊ô◊î json\n      }\n    });\n\n    console.log('Task updated successfully:', result.data);\n  } catch (error) {\n    console.error('Error updating task:', error);\n\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error message:', error.message);\n    }\n  }\n}\n\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}